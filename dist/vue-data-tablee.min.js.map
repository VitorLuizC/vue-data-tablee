{"version":3,"file":"vue-data-tablee.min.js","sources":["../src/helpers/is.js","../src/helpers/validators.js","../src/helpers/get.js","../src/mixins/Sortable.js","../src/DataTable.vue","../src/mixins/Alignable.js","../src/mixins/Selectable.js"],"sourcesContent":["/**\n * Check value's constructor name.\n * @param {*} value\n * @param {string} constructor\n * @returns {boolean}\n */\nexport default (value, constructor) => {\n  const is = Object.prototype.toString.call(value) === `[object ${constructor}]`\n  return is\n}\n","import is from './is'\n\n/**\n * Creates a validator function that checks is value is included in values.\n * @param {Array} values\n * @returns {function(*):boolean}\n */\nconst includes = (values) => (value) => values.includes(value)\n\nconst ALIGNMENTS = ['right', 'left', 'center']\n\n/**\n * Checks if value is an alignment.\n */\nexport const isAlignment = includes(ALIGNMENTS)\n\n/**\n * Checks if value is a list of objects.\n * @param {*} value\n * @returns {boolean}\n */\nexport const isContent = (value) => {\n  const isObject = (value) => is(value, 'Object')\n  const isContent = is(value, 'Array') && value.every(isObject)\n  return isContent\n}\n","import is from './is'\n\nconst DELIMITER = '.'\n\n/**\n * Spreads path into fields list.\n * @param {string} path\n * @returns {Array.<string>}\n */\nconst getProperties = (path) => is(path, 'String') ? path.split(DELIMITER) : []\n\n/**\n * Deep object.\n * @typedef {Object.<string, (number|boolean|string|Deep)>} Deep\n */\n\n/**\n * Checks if a propety is reachable.\n * @param {Deep} object\n * @param {string} property\n * @returns {(number|boolean|string|null)}\n */\nconst getValue = (object, property) => {\n  const isReachable = is(object, 'Object') && object.hasOwnProperty(property)\n  const value = isReachable ? object[property] : null\n  return value\n}\n\n/**\n * Get value from object path.\n * @param {Deep} object\n * @param {(string|Array.<string>)} path\n * @returns {(number|boolean|string|null)}\n */\nexport const get = (object, path) => {\n  const properties = getProperties(path)\n  const value = properties.reduce(getValue, object)\n  return value\n}\n\nconst DEFAULT_VALIDATE = (value) => !is(value, 'Null')\n\n/**\n * Get value from first object.\n * @param {string} name\n * @param {Deep[]} objects\n * @param {function(*):boolean} [validate]\n * @returns {*}\n */\nexport const getProperty = (name, objects, validate = DEFAULT_VALIDATE) => {\n  const properties = objects.map((object) => get(object, name))\n  const property = properties.find((property) => validate(property))\n  return property\n}\n\nexport default get\n","import is from '../helpers/is'\nimport get, { getProperty } from '../helpers/get'\n\n/**\n * Default sort function.\n * @param {(string|number)} a\n * @param {(string|number)} b\n * @returns {number}\n */\nconst DEFAULT_SORT = (a = '', b = '') => {\n  const isNumbers = is(a, 'Number') && is(b, 'Number')\n  if (isNumbers) {\n    return a - b\n  } else {\n    return String(a || '').localeCompare(String(b || ''))\n  }\n}\n\nconst Sortable = ({ cols = 'cols', rows = 'rows' } = {}) => ({\n  props: {\n    /**\n     * Defines if it sort and optionally define's default sort function.\n     */\n    sort: {\n      type: [Boolean, Function],\n      default: true\n    },\n\n    /**\n     * Defines if sort just emit events.\n     */\n    sortExternal: Boolean\n  },\n\n  data () {\n    return {\n      sorter: null,\n      sortment: 'ascending'\n    }\n  },\n\n  computed: {\n    $sortedRows () {\n      const isSorted = is(this.sorter, 'Number')\n      if (!isSorted || this.sortExternal) {\n        return [ ...this[rows] ]\n      }\n\n      const sorted = [ ...this[rows] ].sort((a, b) => this.$sort(a, b))\n      return sorted\n    }\n  },\n\n  methods: {\n    /**\n     * Check if column is sorting.\n     * @param {number} index\n     * @returns {boolean}\n     */\n    $isSorting (index) {\n      const isSorting = this.sorter === index\n      return isSorting\n    },\n\n    /**\n     * Check if a column is sortable.\n     * @param {number} index\n     * @returns {boolean}\n     */\n    $isSortable (index) {\n      const isSortable = !!this.$getSort(index)\n      return isSortable\n    },\n\n    /**\n     * Get column's sort setting.\n     * @param {number} index\n     * @returns {(boolean|function)}\n     */\n    $getSort (index) {\n      const col = this[cols][index]\n      const sort = getProperty('sort', [col, this._props])\n      return sort\n    },\n\n    /**\n     * Get column sort classes.\n     * @param {number} index\n     * @returns {(string|Array.<string, boolean>)[]}\n     */\n    $getSortClasses (index) {\n      const isSortable = this.$isSortable(index)\n      const isSorting = this.$isSorting(index)\n      const classes = {\n        '-sorting': isSorting,\n        '-sortable': isSortable,\n        '-unsortable': !isSortable,\n        ['-' + this.sortment]: isSorting\n      }\n      return classes\n    },\n\n    /**\n     * Get column arrow's.\n     * @param {number} index\n     * @returns {('▼'|'▲'|'')}\n     */\n    $getArrow (index) {\n      const isSorting = this.$isSorting(index)\n      if (!isSorting) return '▲'\n      const arrow = this.sortment === 'ascending' ? '▲' : '▼'\n      return arrow\n    },\n\n    /**\n     * Sort a column or change its sortment.\n     * @param {number} index\n     */\n    $setSorter (index) {\n      const isSorter = this.$isSorting(index)\n      const isSortable = this.$isSortable(index)\n\n      if (!isSortable) {\n        return\n      }\n\n      const column = this[cols][index]\n      const sortment = !isSorter || this.sortment === 'descending' ? 'ascending' : 'descending'\n      this.sortment = sortment\n      this.sorter = index\n      this.$emit('sort', { column, sortment })\n    },\n\n    /**\n     * Returns diference between values.\n     * This is the sort function.\n     * @param {object} rowA\n     * @param {object} rowB\n     * @returns {number}\n     */\n    $sort (rowA, rowB) {\n      const custom = this.$getSort(this.sorter)\n      const sort = is(custom, 'Function') ? custom : DEFAULT_SORT\n      const path = this[cols][this.sorter].field\n      const number = sort(get(rowA, path), get(rowB, path))\n      const result = number * (this.sortment === 'ascending' ? 1 : -1)\n      return result\n    }\n  }\n})\n\nexport default Sortable\n","<template>\n  <table :class=\"classy\">\n    <tr :class=\"[classy + '-row', '-header']\">\n      <th\n        v-if=\"selectable\"\n        :class=\"[classy + '-cell', '-header', '-clickable']\"\n      >\n        <input\n          type=\"checkbox\"\n          :class=\"[classy + '-select', '-all']\"\n          :checked=\"isSelectedAll\"\n          @click.prevent=\"selectAll\"\n        />\n      </th>\n\n      <th\n        v-for=\"(col, index) in cols\"\n        :key=\"index\"\n        :class=\"getClasses(index, 'header')\"\n        :style=\"getStyle(col)\"\n        :width=\"col.width || null\"\n        @click=\"$setSorter(index)\"\n      >\n        <span :class=\"classy + '-text'\">{{ getText(col, 'label') || empty }}</span>\n\n        <slot\n          name=\"sort-icon\"\n          :sortment=\"sortment\"\n          :sorted=\"$isSorting(index)\"\n          :arrow=\"$getArrow(index)\"\n        >\n          <span :class=\"classy + '-icon'\">{{ $getArrow(index) }}</span>\n        </slot>\n      </th>\n    </tr>\n\n    <tr\n      v-for=\"(row, rowIndex) in $sortedRows\"\n      :key=\"rowIndex\"\n      :class=\"[classy + '-row', '-content']\">\n\n      <th\n        v-if=\"selectable\"\n        :class=\"[classy + '-cell', '-content', '-clickable']\"\n        @click.prevent=\"select(row, $event)\"\n      >\n        <input\n          type=\"checkbox\"\n          :class=\"[classy + '-select', '-all']\"\n          :checked=\"isSelected(row)\"\n        />\n      </th>\n\n      <slot name=\"row\" :row=\"row\" :index=\"rowIndex\">\n        <td\n          v-for=\"(col, colIndex) in cols\"\n          :key=\"colIndex\"\n          :class=\"getClasses(colIndex, 'content')\"\n          :style=\"getStyle(col)\"\n          :width=\"col.width || null\"\n        >\n          <span :class=\"classy + '-text'\">{{ getText(row, col.field) || empty }}</span>\n        </td>\n      </slot>\n    </tr>\n  </table>\n</template>\n\n<script>\n  import is from './helpers/is'\n  import get from './helpers/get'\n  import toggle from './helpers/toggle'\n  import Alignable from './mixins/Alignable'\n  import Selectable from './mixins/Selectable'\n  import Sortable from './mixins/Sortable'\n  import { isContent } from './helpers/validators'\n\n  export default {\n    mixins: [ Sortable(), Alignable(), Selectable() ],\n    props: {\n      /**\n       * List of col's data.\n       */\n      cols: {\n        type: Array,\n        required: true,\n        validator: isContent\n      },\n\n      /**\n       * List of row's data.\n       */\n      rows: {\n        type: Array,\n        required: true,\n        validator: isContent\n      },\n\n      /**\n       * Empty cell's character.\n       */\n      empty: {\n        type: String,\n        default: ''\n      }\n    },\n\n    data () {\n      return {\n        classy: this.$options.name || 'data-tablee'\n      }\n    },\n\n    methods: {\n      /**\n       * Get cell's classes.\n       * @param {number} index\n       * @param {('header'|'content')} type\n       * @returns {(string|Object.<string, boolean>)[]}\n       */\n      getClasses (index, type) {\n        const custom = this.cols[index][type + 'Class']\n        const classes = [\n          custom,\n          '-' + type,\n          this.classy + '-cell',\n          this.$getSortClasses(index),\n          '-' + this.$getAlignment(index)\n        ]\n\n        return classes\n      },\n\n      /**\n       * Get cell's styles.\n       * @param {{ hidden: boolean, align: align }} col\n       * @returns {CSSStyleDeclaration}\n       */\n      getStyle (col) {\n        const style = {\n          textAlign: col.align || this.align,\n          display: col.hidden ? 'none' : undefined,\n        }\n        return style\n      },\n\n      /**\n       * Get value's label.\n       * @param {*} value\n       * @param {string} path\n       * @returns {string}\n       */\n      getText: get\n    },\n\n    /**\n     * Install DataTablee components.\n     * @param {Vue} Vue\n     * @param {{ name: string }} [options]\n     */\n    install (Vue, { name = 'data-tablee' } = {}) {\n      Vue.component(name, this)\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import url('https://fonts.googleapis.com/css?family=Nunito+Sans:400,700');\n\n  .data-tablee {\n    overflow: hidden;\n    border: 1px solid #eaedef;\n    border-radius: 5px;\n    border-spacing: 0;\n  }\n\n  .data-tablee-cell {\n    position: relative;\n    min-height: calc(27px + 4px);\n    padding: 18px;\n    border-top: 1px solid #eaedef;\n\n    .data-tablee-row:first-child > & { border-top: 0; }\n\n    &::before {\n      position: absolute;\n      left: 0;\n      top: 50%;\n      display: block;\n      width: 1px;\n      height: 27px;\n      background-color: #eaedef;\n      transform: translateY(-50%);\n      content: '';\n    }\n\n    &:first-child::before { content: none; }\n\n    &.-right { text-align: right; }\n    &.-left { text-align: left; }\n    &.-center { text-align: center; }\n    &.-clickable { cursor: pointer; }\n  }\n\n  .data-tablee-text {\n    font-size: 13px;\n    font-family: 'Nunito Sans', sans-serif;\n    font-weight: 400;\n    color: #5e6684;\n  }\n\n  .data-tablee-cell.-header {\n    background-color: #fdfdfd;\n\n    & > .data-tablee-text,\n    & > .data-tablee-icon {\n      display: inline-block;\n      font-size: 12px;\n      font-family: 'Nunito Sans', sans-serif;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #bec0d3;\n    }\n\n    & > .data-tablee-icon {\n      opacity: 0;\n      transition: opacity .3s ease,\n                  transform .3s ease;\n    }\n\n    &.-sortable {\n      cursor: pointer;\n\n      & > .data-tablee-icon { opacity: .2; }\n\n      &:hover > .data-tablee-icon { opacity: .8; }\n\n      &:active > .data-tablee-icon {\n        transition: transform .1s ease;\n        transform: scale(1.5);\n      }\n\n      &.-right { padding-right: 6px; }\n    }\n\n    &.-sorting > .data-tablee-icon { opacity: 1; }\n  }\n\n  .data-tablee-text { line-height: 1; }\n</style>\n\n","import { getProperty } from '../helpers/get'\nimport { isAlignment } from '../helpers/validators'\n\nconst Alignable = ({ cols = 'cols' } = {}) => ({\n  props: {\n    /**\n     * Default cell's alignment.\n     */\n    align: {\n      type: String,\n      default: 'left',\n      validator: isAlignment\n    }\n  },\n  methods: {\n    /**\n     * Get column's alignment.\n     * @param {number} index\n     * @returns {('right'|'left'|'center')}\n     */\n    $getAlignment (index) {\n      const col = this[cols][index]\n      const alignment = getProperty('align', [col, this._props], isAlignment)\n      return alignment\n    }\n  }\n})\n\nexport default Alignable\n","const Selectable = ({ rows = 'rows' } = {}) => ({\n  props: {\n    selectable: Boolean\n  },\n\n  data () {\n    return {\n      selectedRows: [],\n      lastClicked: undefined\n    }\n  },\n\n  computed: {\n    isSelectedAll () {\n      const isNotEmpty = !!this[rows].length\n      const isEqualsLength = isNotEmpty && this[rows].length === this.selectedRows.length\n      const isSelectedAll = isEqualsLength && this[rows].every((row) => {\n        return this.selectedRows.includes(row)\n      })\n      return isSelectedAll\n    }\n  },\n\n  watch: {\n    rows () {\n      this.selectedRows = []\n    }\n  },\n\n  methods: {\n    /**\n     * Check if a row is selected.\n     * @param {object} row\n     * @returns {boolean}\n     */\n    isSelected (row) {\n      const isSelected = !!this.selectedRows.find((selected) => selected === row)\n      return isSelected\n    },\n\n    /**\n     * Set row active.\n     * @param {object} row\n     * @param {object} event\n     */\n    select (row, event) {\n      if (event.shiftKey && this.lastClicked !== row) {\n        this.multipleSelect(row)\n      } else {\n        this.selectedRows = this.isSelected(row)\n          ? this.selectedRows.filter((selected) => selected !== row)\n          : [ ...this.selectedRows, row ]\n      }\n      this.lastClicked = row\n      this.emitSelected()\n    },\n\n    /**\n     * Set multiple rows active.\n     * @param {object} row\n     */\n    multipleSelect (row) {\n      const s1 = this[rows].indexOf(row)\n      const s2 = this[rows].indexOf(this.lastClicked)\n      const [start, end] = [s1, s2].sort()\n      const range = Array(end - start + 1).fill().map((_, index) => start + index)\n      this.selectedRows = this[rows].filter((_, index) => range.includes(index))\n    },\n\n    /**\n     * Set all rows active.\n     * @param {Event} event\n     */\n    selectAll (event) {\n      this.selectedRows = this.isSelectedAll ? [] : [ ...this[rows] ]\n      this.emitSelected()\n    },\n\n    /**\n     * Emit selected rows.\n     */\n    emitSelected () {\n      this.$emit('select', this.selectedRows)\n    }\n  }\n})\n\nexport default Selectable\n"],"names":["values","value","constructor","Object","prototype","toString","call","getValue","object","property","is","hasOwnProperty","get","path","split","reduce","DEFAULT_VALIDATE","getProperty","name","objects","validate","map","find","isAlignment","includes","isContent","every","DEFAULT_SORT","a","b","String","localeCompare","render","ref","Boolean","Function","this","sorter","sortExternal","rows","sort","$sort","index","$getSort","col","cols","_props","isSortable","$isSortable","isSorting","$isSorting","classes","sortment","isSorter","column","$emit","rowA","rowB","custom","field","Sortable","Alignable","undefined","isSelectedAll","length","selectedRows","row","isSelected","selected","event","shiftKey","lastClicked","multipleSelect","filter","emitSelected","indexOf","start","end","range","Array","fill","_","Selectable","$options","type","classy","$getSortClasses","$getAlignment","align","hidden","Vue","component"],"mappings":";;;;;yLAMA,ICCkBA,aDDFC,EAAOC,UACVC,OAAOC,UAAUC,SAASC,KAAKL,gBAAsBC,OEe5DK,WAAYC,EAAQC,UACJC,EAAGF,EAAQ,WAAaA,EAAOG,eAAeF,GACtCD,EAAOC,GAAY,MAUpCG,WAAOJ,EAAQK,OAzBLA,SAASH,EAATG,EA0BYA,EA1BM,UAAYA,EAAKC,MAPxC,SAkCSC,OAAOR,EAAUC,IAItCQ,WAAoBf,UAAWS,EAAGT,EAAO,SASlCgB,WAAeC,EAAMC,EAASC,yBAAWJ,GACjCG,EAAQE,aAAKb,UAAWI,EAAIJ,EAAQU,KAC3BI,cAAMb,UAAaW,EAASX,MDrC7Cc,GAPKvB,GAEE,QAAS,OAAQ,mBAFPC,UAAUD,EAAOwB,SAASvB,KAc3CwB,WAAaxB,UAENS,EAAGT,EAAO,UAAYA,EAAMyB,eAD5BzB,UAAUS,EAAGT,EAAO,aEblC0B,WAAgBC,EAAQC,yBAAJ,mBAAQ,IACdnB,EAAGkB,EAAG,WAAalB,EAAGmB,EAAG,UAElCD,EAAIC,EAEJC,OAAOF,GAAK,IAAIG,cAAcD,OAAOD,GAAK,aC+DrCG,g7CD3DEC,kDAAS,2CAAe,4BAM7BC,QAASC,mBACP,gBAMGD,uCAKJ,cACE,iEAMOxB,EAAG0B,KAAKC,OAAQ,WAChBD,KAAKE,uBACRF,KAAKG,cAGCH,KAAKG,IAAQC,cAAMZ,EAAGC,UAAMO,EAAKK,MAAMb,EAAGC,oCAWpDa,UACQN,KAAKC,SAAWK,wBASvBA,WACUN,KAAKO,SAASD,sBAS3BA,OACFE,EAAMR,KAAKS,GAAMH,UACVzB,EAAY,QAAS2B,EAAKR,KAAKU,mCAS7BJ,OACTK,EAAaX,KAAKY,YAAYN,GAC9BO,EAAYb,KAAKc,WAAWR,GAC5BS,cACQF,cACCF,iBACGA,YACf,IAAMX,KAAKgB,UAAWH,EAElBE,sBAQET,UACSN,KAAKc,WAAWR,GAEF,cAAlBN,KAAKgB,SAA2B,IAAM,IAD7B,yBASbV,OACJW,EAAWjB,KAAKc,WAAWR,MACdN,KAAKY,YAAYN,QAM9BY,EAASlB,KAAKS,GAAMH,GACpBU,EAAYC,GAA8B,eAAlBjB,KAAKgB,SAA0C,aAAd,iBAC1DA,SAAWA,OACXf,OAASK,OACTa,MAAM,eAAUD,WAAQF,qBAUxBI,EAAMC,OACLC,EAAStB,KAAKO,SAASP,KAAKC,QAC5BG,EAAO9B,EAAGgD,EAAQ,YAAcA,EAAS/B,EACzCd,EAAOuB,KAAKS,GAAMT,KAAKC,QAAQsB,aACtBnB,EAAK5B,EAAI4C,EAAM3C,GAAOD,EAAI6C,EAAM5C,KACJ,cAAlBuB,KAAKgB,SAA2B,GAAK,MCnExDQ,YC3EO3B,yDAAS,4BAMhBH,eACG,iBACEP,oCASEmB,OACPE,EAAMR,KAAKS,GAAMH,UACLzB,EAAY,SAAU2B,EAAKR,KAAKU,QAASvB,MDwDzCsC,YE9EJ5B,yDAAS,2BAEbC,iEAMG4B,kDAQPC,IAFe3B,KAAKG,GAAMyB,QACK5B,KAAKG,GAAMyB,SAAW5B,KAAK6B,aAAaD,QACrC5B,KAAKG,GAAMb,eAAOwC,UACjD9B,EAAK6B,aAAazC,SAAS0C,YAE7BH,gCAMFE,+CAUKC,OACJC,IAAe/B,KAAK6B,aAAa3C,cAAM8C,UAAaA,IAAaF,WAChEC,mBAQDD,EAAKG,GACPA,EAAMC,UAAYlC,KAAKmC,cAAgBL,OACpCM,eAAeN,QAEfD,aAAe7B,KAAK+B,WAAWD,GAChC9B,KAAK6B,aAAaQ,gBAAQL,UAAaA,IAAaF,IACpD9B,KAAU6B,qBAAcC,SAEzBK,YAAcL,OACdQ,wCAOSR,UACH9B,KAAKG,GAAMoC,QAAQT,GACnB9B,KAAKG,GAAMoC,QAAQvC,KAAKmC,cACL/B,OAAvBoC,OAAOC,OACRC,EAAQC,MAAMF,EAAMD,EAAQ,GAAGI,OAAO3D,aAAK4D,EAAGvC,UAAUkC,EAAQlC,SACjEuB,aAAe7B,KAAKG,GAAMkC,gBAAQQ,EAAGvC,UAAUoC,EAAMtD,SAASkB,yBAO1D2B,QACJJ,aAAe7B,KAAK2B,2BAA0B3B,KAAKG,SACnDmC,6CAOAnB,MAAM,SAAUnB,KAAK6B,iBFJKiB,sBAMzBH,gBACI,YACCtD,cAOLsD,gBACI,YACCtD,eAOLK,eACG,mCAMDM,KAAK+C,SAASjE,MAAQ,6CAWpBwB,EAAO0C,UACFhD,KAAKS,KAAKH,GAAO0C,EAAO,SAGrC,IAAMA,EACNhD,KAAKiD,OAAS,QACdjD,KAAKkD,gBAAgB5C,GACrB,IAAMN,KAAKmD,cAAc7C,uBAWnBE,oBAEKA,EAAI4C,OAASpD,KAAKoD,cACpB5C,EAAI6C,OAAS,YAAS3B,YAW1BlD,oBAQF8E,EAAKzD,kDAAS,iBACjB0D,UAAUzE,EAAMkB"}